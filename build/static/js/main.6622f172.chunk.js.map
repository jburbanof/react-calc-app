{"version":3,"sources":["components/Button/index.jsx","App.jsx","components/Result.jsx","components/Functions.jsx","components/MathOperations.jsx","components/Numbers.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","setText","item","words","value","length","onClickNumber","number","onDelete","newText","substring","onContentClear","onClickOperation","operation","onClickEqual","equal","eval","toString","Result","defaultProps","Functions","MathOperations","numbers","renderButtons","map","Numbers","ReactDOM","render","document","getElementById"],"mappings":"yGAAA,qBAiBeA,IAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACb,wBAAQC,UAAWH,EAAMI,QAAS,kBAAMF,EAAaD,IAArD,SACE,+BAAOA,Q,gwCCILI,IAAM,SAANA,MACJ,cAAwBC,oDAAS,IAAjC,kMAAOL,KAAP,cAAaM,QAAb,cACMC,KAAOC,oDAAMR,KAAM,gBACnBS,MAAQF,KAAKG,OAAS,EAAIH,KAAKA,KAAKG,OAAO,GAAK,IACtD,OACE,oEAAMR,UAAU,mBAAhB,UACE,2DAAC,kDAAD,CAAQO,MAAOA,QACf,2DAAC,mDAAD,CACEE,cAAe,SAACC,GACdN,QAAQ,GAAD,OAAIN,MAAJ,OAAWY,OAGtB,2DAAC,qDAAD,CACEC,SAAU,WACR,GAAIb,KAAKU,OAAS,EAClB,CACA,IAAMI,EAAUd,KAAKe,UAAU,EAAGf,KAAKU,OAAO,GAC9CJ,QAAQQ,KAEVE,eAAgB,WACdV,QAAQ,OAGZ,2DAAC,0DAAD,CACEW,iBAAkB,SAACC,GACjBZ,QAAQ,GAAD,OAAIN,MAAJ,OAAWkB,KAEpBC,aAAc,sBAACC,OACbd,QAAQe,KAAKrB,MAAMsB,mBAQdlB,2B,6BC/Cf,gBAEMmB,EAAS,SAAC,GAAD,IAAGd,EAAH,EAAGA,MAAH,OAAgB,qBAAKP,UAAU,SAAf,SAAyBO,KAKxDc,EAAOC,aAAe,CACpBf,MAAO,IAEMc,O,8BCVf,8BAiBeE,IAZG,SAAC,GAAD,IAAGT,EAAH,EAAGA,eAAgBH,EAAnB,EAAmBA,SAAnB,OAChB,0BAASX,UAAU,YAAnB,UACE,cAAC,IAAD,CAAQH,KAAK,iBAAiBC,KAAK,KAAKC,aAAce,IACtD,cAAC,IAAD,CAAQhB,KAAK,SAASC,aAAcY,S,6BCRxC,uBAkBea,IAfQ,SAAC,GAAD,IAAGT,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,aAArB,OACrB,0BAASjB,UAAU,kBAAnB,UACE,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAgBgB,IACjC,cAAC,IAAD,CAAQjB,KAAK,IAAIC,aAAgBgB,IACjC,cAAC,IAAD,CAAQjB,KAAK,IAAIC,aAAgBgB,IACjC,cAAC,IAAD,CAAQjB,KAAK,IAAIC,aAAgBgB,IACjC,cAAC,IAAD,CAAQjB,KAAK,IAAIC,aAAgBkB,S,6BCTrC,uBAIMQ,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,EAAgB,SAACjB,GAEnB,OAAOgB,EAAQE,KADA,SAAAjB,GAAM,OAAK,cAAC,IAAD,CAAgCZ,KAAMY,EAAOU,WAAYrB,aAAcU,GAA1DC,EAAOU,gBAgBnCQ,IAZC,SAAC,GAAD,IAAEnB,EAAF,EAAEA,cAAF,OACZ,yBAAST,UAAU,UAAnB,SAEQ0B,EAAcjB,O,8BCb1B,8CAKAoB,IAASC,OAAO,cAAC,IAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.6622f172.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Button.css'\n\n\nconst Button = ({ type, text, clickHandler }) => (\n  <button className={type} onClick={() => clickHandler(text)}>\n    <span>{text}</span>\n  </button>\n);\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","/* eslint no-eval: 0*/\n//import\nimport React, { useState } from \"react\";\nimport Result from \"./components/Result\";\nimport  words from \"lodash.words\";\nimport Functions from \"./components/Functions\";\nimport MathOperations from \"./components/MathOperations\";\nimport Numbers from \"./components/Numbers\";\nimport \"./App.css\";\n\n// generate\nconst App = () => {\n  const [text, setText] = useState(\"\")\n  const item = words(text, /[^-^+^*^/]+/g)\n  const value = item.length > 0 ? item[item.length-1] : \"0\"\n  return (\n    <main className=\"react-calculator\">\n      <Result value={value} />\n      <Numbers\n        onClickNumber={(number) => {\n          setText(`${text}${number}`)\n        }}\n      />\n      <Functions\n        onDelete={() => {\n          if (text.length > 0)\n          {\n          const newText = text.substring(0, text.length-1)\n          setText(newText)}\n        }}\n        onContentClear={() => {\n          setText(\"\")\n        }}\n      />\n      <MathOperations\n        onClickOperation={(operation) => {\n          setText(`${text}${operation}`)\n        }}\n        onClickEqual={(equal) => {\n          setText(eval(text).toString())\n        }}\n      />\n    </main>\n  )\n}\n\n//export\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Result = ({ value }) => (<div className=\"result\">{value}</div>)\n\nResult.propTypes = {\n  value: PropTypes.string.isRequired,\n};\nResult.defaultProps = {\n  value: \"\",\n};\nexport default Result;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport './Button/Button.css'\n\nconst Functions = ({ onContentClear, onDelete }) => (\n  <section className=\"functions\">\n    <Button type=\"longTextButton\" text=\"Cl\" clickHandler={onContentClear} />\n    <Button text=\"&larr;\" clickHandler={onDelete} />\n  </section>\n);\n\nFunctions.propTypes = {\n    onContentClear: PropTypes.func,\n    onDelete: PropTypes.func\n}\n\nexport default Functions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nconst MathOperations = ({ onClickOperation, onClickEqual }) => (\n  <section className=\"math-operations\">\n    <Button text=\"+\" clickHandler = {onClickOperation} />\n    <Button text=\"-\" clickHandler = {onClickOperation} />\n    <Button text=\"*\" clickHandler = {onClickOperation} />\n    <Button text=\"/\" clickHandler = {onClickOperation} />\n    <Button text=\"=\" clickHandler = {onClickEqual} />\n  </section>\n);\n\nMathOperations.propTypes = {\n  onClickOperation: PropTypes.func.isRequired,\n  onClickEqual: PropTypes.func.isRequired,\n};\n\nexport default MathOperations;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button'\n\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nconst renderButtons = (onClickNumber) => {\n    const render = number => (<Button key={number.toString()} text={number.toString()} clickHandler={onClickNumber} />)\n    return numbers.map(render)\n}\n\nconst Numbers = ({onClickNumber}) => (\n    <section className=\"numbers\">\n        {\n            renderButtons(onClickNumber)\n        }\n    </section>\n)\n\nNumbers.propTypes = {\n    onClickNumber: PropTypes.func\n}\n\nexport default Numbers","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}